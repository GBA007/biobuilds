--- Makefile
+++ Makefile
@@ -1,5 +1,5 @@
-D_COMPILER=dmd
-D_FLAGS=--compiler=dmd -IBioD -IundeaD/src -g -d#-O -release -inline # -version=serial
+D_COMPILER=ldmd2
+D_FLAGS=--compiler=$(D_COMPILER) -IBioD -IundeaD/src -g -d#-O -release -inline # -version=serial
 LDMD=ldmd2
 
 STATIC_LIB_PATH=-Lhtslib -Llz4/lib
@@ -10,7 +10,7 @@ PLATFORM := $(shell uname -s)
 
 ifeq "$(PLATFORM)" "Darwin"
 
-LINK_CMD=gcc -dead_strip -lphobos2-ldc -ldruntime-ldc -lm -lpthread htslib/libhts.a lz4/lib/liblz4.a build/sambamba.o -o build/sambamba
+LINK_CMD=gcc -dead_strip -L$(LDC_ROOT)/lib -lphobos2-ldc -ldruntime-ldc -lm -lpthread htslib/libhts.a lz4/lib/liblz4.a build/sambamba.o -o build/sambamba
 DMD_STATIC_LIBS=htslib/libhts.a lz4/lib/liblz4.a
 
 define split-debug
@@ -20,8 +20,8 @@
 
 else
 
-LINK_CMD=gcc -Wl,--gc-sections -o build/sambamba build/sambamba.o $(STATIC_LIB_SUBCMD) -l:libphobos2-ldc.a -l:libdruntime-ldc.a  -lrt -lpthread -lm
-DMD_STATIC_LIBS=-L-Lhtslib -L-l:libhts.a -L-l:libphobos2.a -L-Llz4/lib -L-l:liblz4.a
+LINK_CMD=gcc -Wl,--gc-sections -o build/sambamba build/sambamba.o $(STATIC_LIB_SUBCMD) -L$(LDC_ROOT)/lib -l:libphobos2-ldc.a -l:libdruntime-ldc.a  -lrt -lpthread -lm
+DMD_STATIC_LIBS=-L-Lhtslib -L-l:libhts.a -L-l:libphobos2-ldc.a -L-Llz4/lib -L-l:liblz4.a
 
 define split-debug
 objcopy --only-keep-debug build/sambamba sambamba.debug
@@ -37,12 +37,12 @@
 # DMD only - this goal is used because of fast compilation speed, during development
 all: $(PREREQS)
 	mkdir -p build/
-	rdmd --force --build-only $(D_FLAGS) $(DMD_STATIC_LIBS) -ofbuild/sambamba main.d
+	rdmd -v --force --build-only $(D_FLAGS) $(DMD_STATIC_LIBS) -ofbuild/sambamba main.d
 
 # This is the main Makefile goal, used for building releases (best performance)
 sambamba-ldmd2-64: $(PREREQS)
 	mkdir -p build/
-	$(LDMD) @sambamba-ldmd-release.rsp
+	$(LDMD) $(LDMD_OPTS) @sambamba-ldmd-release.rsp
 	$(LINK_CMD)
 	$(split-debug)
 
@@ -56,12 +56,12 @@
 	./gen_ldc_version_info.py $(shell which $(LDMD)) > utils/ldc_version_info_.d
 
 htslib-static:
-	cd htslib && $(MAKE)
+	cd htslib && $(MAKE) CFLAGS="$(CFLAGS) -D_GNU_SOURCE" CPPFLAGS="$(CPPFLAGS)" LDFLAGS="$(LDFLAGS)"
 
 lz4-static: lz4/lib/liblz4.a
 
 lz4/lib/liblz4.a: lz4/lib/lz4.c lz4/lib/lz4hc.c lz4/lib/lz4frame.c lz4/lib/xxhash.c
-	cd lz4/lib && $(CC) -O3 -c lz4.c lz4hc.c lz4frame.c xxhash.c && $(AR) rcs liblz4.a lz4.o lz4hc.o lz4frame.o xxhash.o
+	cd lz4/lib && $(CC) $(CFLAGS) -O3 -c lz4.c lz4hc.c lz4frame.c xxhash.c && $(AR) rcs liblz4.a lz4.o lz4hc.o lz4frame.o xxhash.o
 
 # all below link to libhts dynamically for simplicity
 
