#!/bin/bash

set -o pipefail

build_os=$(uname -s)

[ "$BB_ARCH_FLAGS" == "<UNDEFINED>" ] && BB_ARCH_FLAGS=
[ "$BB_OPT_FLAGS" == "<UNDEFINED>" ] && BB_OPT_FLAGS=
[ "$BB_MAKE_JOBS" == "<UNDEFINED>" ] && BB_MAKE_JOBS=1
CFLAGS="${CFLAGS} ${BB_ARCH_FLAGS} ${BB_OPT_FLAGS}"
CXXFLAGS="${CXXFLAGS} ${BB_ARCH_FLAGS} ${BB_OPT_FLAGS}"
LDFLAGS="${LDFLAGS} -L${PREFIX}/lib"

[ $BB_MAKE_JOBS -gt 64 ] && BB_MAKE_JOBS=64
[ -d "${PREFIX}/bin" ] || mkdir -vp "${PREFIX}/bin"
[ -d "${PREFIX}/lib" ] || mkdir -vp "${PREFIX}/lib"

if [ "$build_os" == 'Darwin' ]; then
    toolset=clang
    CXXFLAGS="${CXXFLAGS} -stdlib=libstdc++"
    LDFLAGS="${LDFLAGS} -stdlib=libstdc++"
elif [ "$build_os" == 'Linux' ]; then
    toolset=gcc
else
    echo "Cannot build Boost on unsupported OS '$build_os'" >&2
    exit 1
fi

# NOTE: don't tee to "bootstrap.log" below as it's generated by bootstrap.sh
./bootstrap.sh --prefix="${PREFIX}" --libdir="${PREFIX}/lib" \
    --with-icu="${PREFIX}" \
    --without-libraries=graph_parallel,mpi,python \
    2>&1 | tee config.log

./b2 variant=release address-model=64 toolset=${toolset} \
    cflags="$CFLAGS" cxxflags="$CXXFLAGS" \
    include="${PREFIX}/include" linkflags="$LDFLAGS" \
    -j${BB_MAKE_JOBS} install 2>&1 | tee build.log
