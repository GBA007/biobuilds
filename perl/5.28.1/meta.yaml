{% set name = "perl" %}
{% set version = "5.28.1" %}
{% set build_number = 3 %}
{% set src_ext = "tar.gz" %}
{% set sha256 = "3ebf85fe65df2ee165b22596540b7d5d42f84d4b72d84834f74e2e0b8956c347" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  fn: "{{ name|lower }}-{{ version }}.{{ src_ext }}"
  url:
    - "https://www.cpan.org/src/5.0/perl-{{ version }}.{{ src_ext }}"
    - "http://download.lab7.io/sources/{{ name|lower }}-{{ version }}_{{ sha256[:10] }}.{{ src_ext }}"
  sha256: "{{ sha256 }}"

requirements:
  build:
    - biobuilds-build
    - {{ compiler('c') }}
  host:
    - bzip2
    - gdbm
    - libdb
    - zlib

build:
  number: {{ build_number }}

outputs:
  - name: "perl"
    script: install_perl.sh
    test:
      commands:
        - perl --help
        # Make sure modules linked to external libraries load properly
        {% for module in [
            "AnyDBM_File",
            "Compress::Raw::Bzip2",
            "Compress::Raw::Zlib",
            "DB_File",
            "GDBM_File",
            ]
        %}
        - perl -e 'use {{ module }};'
        {% endfor %}
    about:
      home: "https://www.perl.org/"
      license: Artistic
      license_file: Artistic
      summary: The Practical Extraction and Report Language
      description: >
        A highly capable, feature-rich programming language that is suitable for
        both rapid prototyping and large scale development projects.

  # Compiler package used for building extensible subrountines (XS) modules
  - name: "perl_c_compiler"
    requirements:
      host:
        # Needed so `pin_compatible` works. Ideally, we'd pin using the
        # compiler and version version from the "build" section, but that does
        # not seem to be an option at the moment.
        - {{ compiler('c') }}
      run:
        - {{ pin_subpackage('perl', exact=True) }}
        # Both GCC and LLVM (clang) should be compatible within major versions
        - {{ pin_compatible(compiler('c'), max_pin='x') }}
    test:
      files:
        # Source: https://www.perl.com/article/getting-started-with-xs/
        - XS-Tutorial
      script: test_perl_c_compiler.sh
    about:
      summary: C compiler used for building Perl XS modules

  # `bioconda` compatibility package
  - name: "perl-threaded"
    requirements:
      - {{ pin_subpackage('perl', exact=True) }}
    build:
      # Prevent inclusion of "plx.yy" in this package's build string, since it
      # will always require a specific build of the 'perl' package.
      string: "{{ build_number }}"
    test:
      commands:
        - perl --help
    about:
      home: "https://www.perl.org"
      license: Artistic
      license_file: Artistic
      summary: Perl interpreter with thread support enabled
      description: >
        Dummy package that installs the corresponding BioBuilds "perl" package.
        Its primary use is to support installation of `bioconda` packages into
        BioBuilds environments, as some packages from that channel list
        "perl-threaded" rather than "perl" as a run-time dependency.

